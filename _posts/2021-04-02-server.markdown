---
layout:     post
title:      "Linux op"
date:       2021-04-02
author:     "Dylan"
header-img: "img/post-assassin_odyssey.jpg"
catalog: true
tags:
    - note
---


##yum
rm /etc/yum.repos.d/nodesource*.repo
yum clean all && yum makecache fast


##
/etc/hosts


## netplan
/etc/netplan
netplan apply


## ssh

/etc/ssh/sshd_config
service sshd restart

上传下载出现network error software caused connection abort：更改ClientAliveInterval

## putty

1、ssh连接需更改
Connection: keep session alive
Connection-Data: Auto-login username
Connection-SSH-Auth: Private key file

2、下载、上传
```
pscp -P 10060 -i C:\Users\lihao\.ssh\pri.ppk loongson@114.242.206.180:/home/loongson/nscscc2021-users.xls .
pscp -P 10060 d:\xx.bit loongson@114.242.206.180:/home/loongson/
```


## linux

```
ssh -p 10060 loongson@114.242.206.174
chomd 777 vivado19-gcc.tar
scp -P 10060 loongson@114.242.206.174:/home/loongson/vivado19-gcc.tar /home/dylan
```

```
df -h           //disk on sys
lsblk           //all disk
ncdu [dir]      //space analysis
```

## docker

```
docker system
docker ps       //container
docker images   //images
```

docker save导出的image是原image不变，直接load即可

## MongoDB

MongoDB使用的是内存映射存储引擎，它会把磁盘IO操作转换成内存操作。

如果是读操作，内存中的数据起到缓存的作用，如果是写操作，内存还可以把随机的写操作转换成顺序的写操作，总之可以大幅度提升性能。

MongoDB并不干涉内存管理工作，而是把这些工作留给操作系统，缺了就跟OS要内存，多了也不还。

强行收回内存：调用linux或mongo的程序 或 重启mongod

mongod参数 wiredTigerCacheSizeGB 控制WiredTiger存储引擎所占用的cache size。

wiredTigerCacheSizeGB包括数据和索引。Mongod本身使用内存如连接池堆栈以及sorting buffer等都是额外的，不会被统计到这个数字里面。


## jenkins

> 安装删除插件后都需要重启才能看到效果


#### 重启

`http://localhost:8080/restart`


#### 汉化

安装插件 Locale，并在manage:config:Locale下设置Default Language为zh_CN
	
安装插件 Localization Support


#### 安装插件设置源地址

pluginManager:advance:升级站点, 设置为：

```
https://jenkins-zh.gitee.io/update-center-mirror/tsinghua/update-center.json
https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json
```


## docker

> [UBuntu 16.04下安装Docker](https://yq.aliyun.com/articles/675833/)

用官方脚本安装docker

`sudo curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun`

docker stop $(docker ps -a);docker rm $(docker ps -a)
docker rmi [image id]
docker history [image id]


#### 装mysql

```
docker pull mysql:latest
docker images
docker run -itd --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=mysql mysql
docker ps
docker exec -it mysql bash

mysql -u root -p
```


#### 装redis

```
docker pull redis:latest
docker images
docker run -itd --name redis -p 6379:6379 redis
docker ps
docker exec -it redis /bin/bash

redis-cli
```


## IDEA


#### 项目无错但一堆红

* 删除.iml，maven->reimport
* 删除.idea目录，重新打开项目
* File->Invalidate Caches/Restart

## server

[netstat命令](https://blog.csdn.net/qq_42014600/article/details/90372315)

查看服务器建立的连接 `netstat -atlp`

查看host /etc/hosts

服务器端口正常访问不到服务，可能是服务配置的ip有问题，不能侦听localhost:port而应是0.0.0.0:port

```
scp /home/work/source.txt work@192.168.0.10:/home/work/ #把本地的source.txt文件拷贝到192.168.0.10机器上的/home/work目录下
scp work@192.168.0.10:/home/work/source.txt /home/work/ #把192.168.0.10机器上的source.txt文件拷贝到本地的/home/work目录下
scp work@192.168.0.10:/home/work/source.txt work@192.168.0.11:/home/work/ #把192.168.0.10机器上的source.txt文件拷贝到192.168.0.11机器的/home/work目录
```

##mongodb

删除数据后资源占用不变，等待重利用即可，尽量不要主动回收